import stdlib

fn fib_nonrecursive(n: int) => int {
  let cur: int = 0
  let next: int = 1
  let placeholder: int = 0

  let fib_count: int = 0
  while (fib_count < n) {
    println("fib(" + (fib_count + 1) + ") = " + cur)
    placeholder = next
    next = cur + next
    cur = placeholder
    fib_count += 1
  }
}

// Recursive functions destroy performace
fn fib(n: int) => int {
    if (n <= 1) {
      return n
    }
    return fib(n - 1) + fib(n - 2)
}

fn main() {
  fib_nonrecursive(1000)
}
